README msatCommand.py v 0.3.0; Copyright 2005-2006, Brant C. Faircloth

About the files in the archive
-------------
After unzipping the archive (see Installation), you should have a folder of 6 files:
      -gpl.txt (a copy of the GNU Public License)
      -msatCommand.py (command-line executable)
      -NO_WARRANTY.txt (self-explanatory)
      -README (this file)

Changes since previous version
-------------

(1)  msatCommand not requires bioPython
(2)  msatCommand will scan for all mono, di, tri, tetra, penta, and hexanucleotide microsatellite repeats
(3)  you may choose whether or not to scan for all of these (time increases exponential when scanning lots of sequences)
(4)  there is now a progress bar
(5)  input files should be in FASTA format (e.g. all sequences in the same file)
(6)  there is a conversion script to change individual text files such as those output by sequencher to single fasta files.  Look for it on http://gallus.forestry.uga.edu/software/.
(7)  output in tab-delimited text allowing importation to MS Excel.


About this program
-------------
MicrosatFinder depends on Python and BioPython (http://biopython.org) to run.  On OS X, python is installed by default.  On other operating systems, you may have to install python.  BioPython is easy to install.  However, it requires mxTextTools be installed.  See BioPython and mxTextTools for instructions and downloads.

If run windows or lack a python installation altogehter, try python.org for instructions.

True to the ancestor of this program, msatCommand will scan for the lowest alphabetical designation for all di-, tri-, tetra-, penta-, and hexa- nucleotide repeats (n=2,4,10,32,102,350 unique combinations, respectively).  

Right now, this program should probably be treated as a beta version.  Use it at your own risk.  however, we have tested this program using thousands of sequences in a single fasta file and have had no problems as of yet. 

Please email faircloth@gmail.com if you find a bug with its description and your OS and OS version-number.


Installation of command-line version on other OSs:
-------------
1)  Unzip and untar the downloaded folder if your browser does not do this automatically (you can use stuffit expander)
2)  Leave the file (msatCommand.py) in the directory it created or move it wherever you like (e.g. /usr/local/bin/).
3)  Invoke the program by navigating to the folder in your command-line program of choice or put it in your path, and run it with (at minimum):

      $./msatCommand.py -i /path/to/your/fastaFile.fsa -o /path/to/your/outputFile

Command-line options include:
      
      -i [file_of sequences]
      -o [output file location.  defaults to output.txt in same folder as infile.]
      -s [search type.  Options are 'tetra' (for all tetranuc and lower repeats), 'penta' for pentanuc and lower, and 'hexa' for hexa and lower.  This defaults to 'hexa'.]
      -h [shows command-line options]
      
      $./msatCommand.py -i /path/to/your/fastaFile.fsa -s 'penta'

Would scan fastaFile.fsa for all pentanucleotide and smaller repeats and output this results to the file output.txt in the same directory as fastaFile.fsa.


Microsatellite Sequences
-------------
True to the ancestor of this program, msat_finder will scan for the lowest alphabetical designation for all di-, tri-, tetra-, penta-, and hexanucleotide repeats.  These lists are now pretty long, so they have not been reproduced here.  Open msatCommand.py in a text editor and you will see these search sequences beginning with self.mononucleotide.

Minimum number of repeats
-------------
This program will search for microsatellites with the following minimum number of repeats:
Mononucleotide: 10 repeat units
Dinucleotide: 7 repeat units
Trinucleotide:  5 repeat units
Tetranucleotide, Pentanucleotide, Hexanucleotide:  4 repeat units

These values may be edited in the command-line source should you like to try something different.  They are as such:

{"mononucleotide":'{9,}',"dinucleotide":'{6,}',"trinucleotide":'{4,}',"tetranucleotide":'{3,}', "pentanucleotide":'{3,}', "hexanucleotide":'{3,}'}

If you desire to search for a higher/lower number of repeats, simply change the integer values for the repeat(s) to an integer of your choice.  Save the file, and re-run the command-line application.  This option is not available for the executable version unless you want to rebuild the application bundle after editing the MicrosatFinder_source.py file.

N Bases
-------------

This program has been set up to count N (unknown) bases as microsat repeats if they exist within a microsat repeat area and are followed by a true repeat (e.g. 'aaag' or 'ag').  They are not counted in other cases.

Performance
-------------
Pretty fast when scanning for all tetranucs and smaller.


7/19/2006